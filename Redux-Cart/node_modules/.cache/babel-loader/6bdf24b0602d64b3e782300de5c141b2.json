{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newitem = action.payload;\n      const existingItem = state.items.find(item => item.id === newitem.id);\n\n      if (!existingItem) {\n        state.items.push({\n          itemId: newitem.id,\n          price: newitem.price,\n          quantity: 1,\n          totalPrice: newitem.price,\n          name: newitem.title\n        });\n      }\n    },\n\n    removeItemFromCart() {}\n\n  }\n});","map":{"version":3,"sources":["/home/amer/Downloads/01-starting-project/src/store/cart-slice.js"],"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newitem","payload","existingItem","find","item","id","push","itemId","price","quantity","totalPrice","title","removeItemFromCart"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAG1BE,EAAAA,IAAI,EAAG,MAHmB;AAI1BC,EAAAA,YAAY,EAAE;AAEVC,IAAAA,KAAK,EAAE,EAFG;AAGVC,IAAAA,aAAa,EAAE;AAHL,GAJY;AAU1BC,EAAAA,QAAQ,EAAG;AAEbC,IAAAA,aAAa,CAACC,KAAD,EAAOC,MAAP,EAAc;AAE3B,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAiBC,IAAI,IAAGA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA5C,CAArB;;AACE,UAAG,CAACH,YAAJ,EAAiB;AACbJ,QAAAA,KAAK,CAACJ,KAAN,CAAYY,IAAZ,CAAiB;AAACC,UAAAA,MAAM,EAAEP,OAAO,CAACK,EAAjB;AACbG,UAAAA,KAAK,EAAGR,OAAO,CAACQ,KADH;AAEbC,UAAAA,QAAQ,EAAE,CAFG;AAGbC,UAAAA,UAAU,EAACV,OAAO,CAACQ,KAHN;AAIbhB,UAAAA,IAAI,EAACQ,OAAO,CAACW;AAJA,SAAjB;AAKH;AACJ,KAbc;;AAebC,IAAAA,kBAAkB,GAAG,CAAE;;AAfV;AAVe,CAAD,CAA7B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst cartSlice = createSlice({\n\n\n    name : 'cart',\n    initialState: {\n   \n        items: [],\n        totalQuantity: 0,\n    },\n    \n    reducers : {\n\n  addItemToCart(state,action){\n\n  const newitem = action.payload;\n  const existingItem = state.items.find(item=> item.id === newitem.id)\n    if(!existingItem){\n        state.items.push({itemId: newitem.id , \n            price : newitem.price,\n            quantity: 1,\n            totalPrice:newitem.price,\n            name:newitem.title });\n    }  \n},\n\n  removeItemFromCart() {}\n    }\n});"]},"metadata":{},"sourceType":"module"}