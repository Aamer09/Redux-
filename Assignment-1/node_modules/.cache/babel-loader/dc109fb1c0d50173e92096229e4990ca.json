{"ast":null,"code":"var _jsxFileName = \"/home/amer/Downloads/01-starting-project/src/components/Counter.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { counterActions } from \"../store/index\";\nimport classes from \"./Counter.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const counter = useSelector(state => state.counter);\n  const show = useSelector(state => state.showCounter);\n\n  const incrementHandler = () => {\n    dispatch(counterActions.increment());\n  };\n\n  const increaseHandler = () => {\n    dispatch(counterActions.increase(10));\n  };\n\n  const decrementHandler = () => {\n    dispatch(counterActions.decrement());\n  };\n\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggle());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementHandler,\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increaseHandler,\n        children: \"IncrementBy10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrementHandler,\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"a6W6bcAuHVADZPU2xn93xNQZltc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Counter;\nexport default Counter; // class Counter extends Component {\n//     incrementHandler() {\n//       this.props.increment();\n//     }\n//     decrementHandler(){\n//       this.props.decrement();\n//     }\n//     toggleCounterHandler() {}\n//       render() {\n//         return (\n//           <main className={classes.counter}>\n//             <h1>Redux Counter</h1>\n//             <div className={classes.value}>{this.props.counter}</div>\n//             <div>\n//               <button onClick = {this.incrementHandler.bind(this)}>Increment</button>\n//               <button onClick ={this.decrementHandler.bind(this)}>Decrement</button>\n//             </div>\n//             <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n//           </main>\n//         );\n//       }\n// }\n//       const mapStateToprops = state => {\n//     return {\n//       counter : state.counter\n//     };\n//       }\n//       const mapDispatchToprops = dispatch => {\n//         return {\n//           increment: () => dispatch({type: 'increment'}),\n//           decrement:() => dispatch({type: 'decrement'}),\n//         }\n//       };\n//   export default connect(mapStateToprops,mapDispatchToprops)(Counter);\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/home/amer/Downloads/01-starting-project/src/components/Counter.js"],"names":["useSelector","useDispatch","counterActions","classes","Counter","dispatch","counter","state","show","showCounter","incrementHandler","increment","increaseHandler","increase","decrementHandler","decrement","toggleCounterHandler","toggle","value"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAIA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAEpB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA,QAAMK,OAAO,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,OAAlB,CAA3B;AAGA,QAAME,IAAI,GAAGR,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACE,WAAlB,CAAxB;;AAEA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BL,IAAAA,QAAQ,CAACH,cAAc,CAACS,SAAf,EAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC5BP,IAAAA,QAAQ,CAACH,cAAc,CAACW,QAAf,CAAwB,EAAxB,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BT,IAAAA,QAAQ,CAACH,cAAc,CAACa,SAAf,EAAD,CAAR;AACD,GAFD;;AAGA,QAAMC,oBAAoB,GAAG,MAAM;AACjCX,IAAAA,QAAQ,CAACH,cAAc,CAACe,MAAf,EAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAM,IAAA,SAAS,EAAEd,OAAO,CAACG,OAAzB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAGGE,IAAI,iBAAI;AAAK,MAAA,SAAS,EAAEL,OAAO,CAACe,KAAxB;AAAA,gBAAgCZ;AAAhC;AAAA;AAAA;AAAA;AAAA,YAHX,eAIE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEI,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEE,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAEE,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eASE;AAAQ,MAAA,OAAO,EAAEE,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CArCD;;GAAMZ,O;UAEaH,W,EAEDD,W,EAGHA,W;;;KAPTI,O;AAsCN,eAAeA,OAAf,C,CAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\nimport { counterActions } from \"../store/index\";\nimport classes from \"./Counter.module.css\";\n\n\n\nconst Counter = () => {\n\n  const dispatch = useDispatch();\n  \n  const counter = useSelector((state) => state.counter);\n\n\n  const show = useSelector((state) => state.showCounter);\n\n  const incrementHandler = () => {\n    dispatch(counterActions.increment());\n  };\n\n  const increaseHandler = () => {\n    dispatch(counterActions.increase(10));\n  };\n\n  const decrementHandler = () => {\n    dispatch(counterActions.decrement());\n  };\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggle());\n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n\n      {show && <div className={classes.value}>{counter}</div>}\n      <div>\n        <button onClick={incrementHandler}>Increment</button>\n        <button onClick={increaseHandler}>IncrementBy10</button>\n        <button onClick={decrementHandler}>Decrement</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\nexport default Counter;\n\n// class Counter extends Component {\n\n//     incrementHandler() {\n\n//       this.props.increment();\n\n//     }\n\n//     decrementHandler(){\n\n//       this.props.decrement();\n\n//     }\n//     toggleCounterHandler() {}\n\n//       render() {\n//         return (\n//           <main className={classes.counter}>\n//             <h1>Redux Counter</h1>\n//             <div className={classes.value}>{this.props.counter}</div>\n//             <div>\n//               <button onClick = {this.incrementHandler.bind(this)}>Increment</button>\n//               <button onClick ={this.decrementHandler.bind(this)}>Decrement</button>\n//             </div>\n//             <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n//           </main>\n//         );\n//       }\n// }\n//       const mapStateToprops = state => {\n\n//     return {\n//       counter : state.counter\n//     };\n//       }\n//       const mapDispatchToprops = dispatch => {\n\n//         return {\n//           increment: () => dispatch({type: 'increment'}),\n//           decrement:() => dispatch({type: 'decrement'}),\n//         }\n//       };\n\n//   export default connect(mapStateToprops,mapDispatchToprops)(Counter);\n"]},"metadata":{},"sourceType":"module"}