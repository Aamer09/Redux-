{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst intialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  intitalState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\n\nconst counterReducer = (state = intitalState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.payload,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"toggle\") {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n\n  return state;\n};\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store; //const store = createStore(counterReducer);\n\n/*console.log(store.getState());\n\nconst counterSubscriber = () => {\n\nconst latestState = store.getState();\nconsole.log(latestState);\n\n}\n\nstore.subscribe(counterSubscriber);\n\nstore.dispatch({type :'increment'})\nstore.dispatch({type : 'decrement'})\n\n\n*/","map":{"version":3,"sources":["/home/amer/Downloads/01-starting-project/src/store/index.js"],"names":["createSlice","configureStore","intialState","counter","showCounter","counterSlice","name","intitalState","reducers","increment","state","decrement","increase","action","amount","toggle","counterReducer","type","payload","store","reducer","counterActions","actions"],"mappings":"AACA,SAASA,WAAT,EAAqBC,cAArB,QAA2C,kBAA3C;AACA,MAAMC,WAAW,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAeC,EAAAA,WAAW,EAAE;AAA5B,CAApB;AAIA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC/BM,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAF+B;AAG/BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACP,OAAN;AACD,KAHO;;AAIRQ,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACP,OAAN;AACD,KANO;;AAORS,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACtBH,MAAAA,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBU,MAAM,CAACC,MAAvC;AACD,KATO;;AAURC,IAAAA,MAAM,CAACL,KAAD,EAAQ;AACZA,MAAAA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACN,WAA3B;AACD;;AAZO;AAHqB,CAAD,CAAhC;;AAmBA,MAAMY,cAAc,GAAG,CAACN,KAAK,GAAGH,YAAT,EAAuBM,MAAvB,KAAkC;AACvD,MAAIA,MAAM,CAACI,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO;AACLd,MAAAA,OAAO,EAAEO,KAAK,CAACP,OAAN,GAAgB,CADpB;AAELC,MAAAA,WAAW,EAAEM,KAAK,CAACN;AAFd,KAAP;AAID;;AAED,MAAIS,MAAM,CAACI,IAAP,KAAgB,UAApB,EAAgC;AAC9B,WAAO;AACLd,MAAAA,OAAO,EAAEO,KAAK,CAACP,OAAN,GAAgBU,MAAM,CAACK,OAD3B;AAELd,MAAAA,WAAW,EAAEM,KAAK,CAACN;AAFd,KAAP;AAID;;AAED,MAAIS,MAAM,CAACI,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO;AACLd,MAAAA,OAAO,EAAEO,KAAK,CAACP,OAAN,GAAgB,CADpB;AAELC,MAAAA,WAAW,EAAEM,KAAK,CAACN;AAFd,KAAP;AAID;;AAED,MAAIS,MAAM,CAACI,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAO;AACLb,MAAAA,WAAW,EAAE,CAACM,KAAK,CAACN,WADf;AAELD,MAAAA,OAAO,EAAEO,KAAK,CAACP;AAFV,KAAP;AAID;;AACD,SAAOO,KAAP;AACD,CA7BD;;AA8BA,MAAMS,KAAK,GAAGlB,cAAc,CAAC;AAC3BmB,EAAAA,OAAO,EAAEf,YAAY,CAACe;AADK,CAAD,CAA5B;AAMA,OAAO,MAAMC,cAAc,GAAGhB,YAAY,CAACiB,OAApC;AACP,eAAeH,KAAf,C,CAGA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\nimport { createSlice,configureStore } from \"@reduxjs/toolkit\";\nconst intialState = { counter: 0 , showCounter: true };\n\n\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  intitalState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\nconst counterReducer = (state = intitalState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.payload,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === \"toggle\") {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter,\n    };\n  }\n  return state;\n};\nconst store = configureStore({\n  reducer: counterSlice.reducer,\n});\n\n \n\nexport const counterActions = counterSlice.actions;\nexport default store;\n\n\n//const store = createStore(counterReducer);\n/*console.log(store.getState());\n\nconst counterSubscriber = () => {\n\nconst latestState = store.getState();\nconsole.log(latestState);\n\n}\n\nstore.subscribe(counterSubscriber);\n\nstore.dispatch({type :'increment'})\nstore.dispatch({type : 'decrement'})\n\n\n*/\n"]},"metadata":{},"sourceType":"module"}